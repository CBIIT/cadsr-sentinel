connect

#1 add the jdbc module it doesn't matter if it's already there
# configure datasource
# is the driver in standalone.xml?
# if not, add
if (outcome != success) of /subsystem=datasources/jdbc-driver=oracle:read-resource
    /subsystem=datasources/jdbc-driver=oracle:add( \
    driver-name=oracle, \
    driver-module-name=com.oracle.jdbc6, \
    driver-xa-datasource-class-name=oracle.jdbc.driver.OracleDriver) {allow-resource-service-restart=true}
end-if

# is the db connection in standalone.xml?
# if yes remove
 if (outcome == success) of /subsystem=datasources/data-source=SentinelDS:read-resource
data-source remove --name=SentinelDS
end-if

 if (outcome == success) of /subsystem=datasources/data-source=caDSRDS:read-resource
data-source remove --name=caDSRDS
end-if


# is the db connection in standalone.xml?
# if not, add
if (outcome != success) of /subsystem=datasources/data-source=SentinelDS:read-resource
data-source add \
    --name=SentinelDS \
    --driver-name=oracle \
    --connection-url=jdbc:oracle:thin:@@connectionUrl@ \
    --jndi-name=java:jboss/datasources/SentinelDS \
    --user-name=@systemAccountName@ \
    --password=@systemAccountPassword@ \
    --use-ccm=true \
    --max-pool-size=100 \
    --blocking-timeout-wait-millis=5000 
end-if

if (outcome != success) of /subsystem=datasources/data-source=caDSRDS:read-resource
data-source add \
    --name=caDSRDS \
    --driver-name=oracle \
    --connection-url=jdbc:oracle:thin:@@connectionUrl@ \
    --jndi-name=java:jboss/datasources/caDSRDS \
    --user-name=@systemAccountName@ \
    --password=@systemAccountPassword@ \
    --use-ccm=true \
    --max-pool-size=100 \
    --blocking-timeout-wait-millis=5000 
end-if

if (outcome != success) of /subsystem=logging/size-rotating-file-handler=SENTINEL:read-resource
/subsystem=logging:write-attribute(name=use-deployment-logging-config, value=false)
/subsystem=logging:write-attribute(name=add-logging-api-dependencies,value=true)
/subsystem=logging/size-rotating-file-handler=SENTINEL:add(level=@logLevel@, file={"relative-to"=>"jboss.server.log.dir", "path"=>"cadsrsentinel.log"}, append=false, autoflush=true)
/subsystem=logging/size-rotating-file-handler=SENTINEL:write-attribute(name="formatter", value="%d [%t] %-5p [%c : %L] %m%n") 
/subsystem=logging/size-rotating-file-handler=SENTINEL:write-attribute(name="rotate-size", value="1m")
/subsystem=logging/size-rotating-file-handler=SENTINEL:write-attribute(name="max-backup-index", value="10")
end-if


if (outcome!= success) of /subsystem=logging/logger=gov.nih.nci.cadsr.sentinel:read-resource
/subsystem=logging/logger=gov.nih.nci.cadsr.sentinel:add(use-parent-handlers=false,handlers=["SENTINEL"])
end-if

if (outcome != success) of /subsystem=undertow/servlet-container=default/setting=session-cookie:read-resource
/subsystem=undertow/servlet-container=default/setting=session-cookie:add(http-only=true,secure=true)
end-if

if (outcome == success) of /subsystem=undertow/server=default-server/host=default-host/filter-ref=server-header:read-resource
#Remove filter-ref=server-header
/subsystem=undertow/server=default-server/host=default-host/filter-ref=server-header:remove()
end-if

if (outcome == success) of /subsystem=undertow/server=default-server/host=default-host/filter-ref=x-powered-by-header:read-resource
#Remove filter-ref=x-powered-by-header
/subsystem=undertow/server=default-server/host=default-host/filter-ref=x-powered-by-header:remove()
end-if

if (outcome == success) of /subsystem=undertow/configuration=filter/response-header=server-header:read-resource
#Remove response-header=server-header
/subsystem=undertow/configuration=filter/response-header=server-header:remove()
end-if

if (outcome == success) of /subsystem=undertow/configuration=filter/response-header=x-powered-by-header:read-resource
#Remove response-header=x-powered-by-header
/subsystem=undertow/configuration=filter/response-header=x-powered-by-header:remove()
end-if