<!-- Copyright ScenPro, Inc. 2005
     $Header: /share/content/gforge/sentinel/sentinel/build.xml,v 1.40 2007-07-26 15:44:07 hebell Exp $
     $Name: not supported by cvs2svn $
-->
<project name="caDSR Sentinel Alert Tool" default="init" basedir=".">
    <description>
        Build and deploy the caDSR Sentinel Alert Tool
    </description>
    <!-- set global properties for this build -->

    <property file="build.properties" />
    <filter token="DSurl" value="${CADSR.DS.URL}"/>
    <filter token="DSusername" value="${CADSR.DS.USER}"/>
    <filter token="DSpassword" value="${CADSR.DS.PSWD}"/>
    <filter token="valid.userid" value="${TEST.VALID.USER}"/>
    <filter token="valid.pswd" value="${TEST.VALID.PSWD}"/>
    <filter token="invalid.userid" value="${TEST.BAD.USER}"/>
    <filter token="invalid.pswd" value="${TEST.BAD.PSWD}"/>
    <filter token="tier" value="${TIER}"/>
    <filter token="tier.upper" value="${TIER.UPPER}"/>
    <filter token="tier.name" value="${TIER.NAME}"/>

    <property name="root" location="WebRoot"/>
    <property name="deploy" location="deployment-artifacts"/>
    <property name="odoc" location="${deploy}/javadoc"/>
    <property name="temp" location="tmp"/>
    <property name="test-results" location="${deploy}/test-results"/>

    <property name="ospackage" location="${deploy}/ospack"/>
    <property name="wweb" location="${root}/WEB-INF"/>
    <property name="oclasses" location="${wweb}/classes"/>
    <property name="wlib" location="${wweb}/lib"/>
    <property name="jsp" location="${root}/jsp"/>
    <property name="oprop" location="${oclasses}/gov/nih/nci/cadsr/sentinel"/>
    <property name="java" location="src"/>
    <property name="lib" location="lib"/>
    <property environment="environ"/>
    
    <condition property="check.test">
        <equals arg1="${TEST}" arg2="true" trim="true" />
    </condition>
 
    <path id="libpath">
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${wlib}">
                <include name="**/*.jar"/>
            </fileset>
    </path>
    
    <target name="check1" unless="TIER.NAME">
        <fail>Missing 1 or more required properties. See template.build.properties for a complete description.</fail>
    </target>
        
    <target name="clean" depends="check1">
        <delete dir="${oclasses}"/>
        <delete dir="${deploy}"/>
        <delete file="${wweb}/web.xml" />
        <mkdir dir="${oclasses}"/>
        <mkdir dir="${deploy}"/>
        <mkdir dir="${deploy}/bin"/>
        <mkdir dir="${deploy}/gforge"/>
        <mkdir dir="${deploy}/jboss"/>
        <mkdir dir="${deploy}/sql"/>
    	<mkdir dir="${test-results}"/>
    </target>
    
    <target name="compile" depends="clean">
        <echo>Debug is ${JDEBUG}</echo>
        <javac srcdir="${java}" destdir="${oclasses}" tempdir="${temp}" debug="${JDEBUG}">
            <compilerarg line="-deprecation"/>
            <compilerarg line="-Xlint:unchecked"/>
            <classpath refid="libpath" />
        </javac>
    </target>
    
    <target name="assemble" depends="compile">
        <delete>
            <fileset file="${oprop}/DSRAlert.properties"/>
            <fileset file="${oprop}/test/DSRAlertTest.properties"/>
            <fileset file="${wweb}/web.xml"/>
        </delete>
        <copy todir="${deploy}">
            <fileset file="build.xml"/>
            <fileset file="build.properties"/>
        </copy>
        <copy tofile="${oprop}/DSRAlert.properties" filtering="true">
            <fileset file="conf/template.DSRAlert.properties"/>
        </copy>
        <copy tofile="${oprop}/test/DSRAlertTest.properties" filtering="true">
            <fileset file="conf/template.DSRAlertTest.properties"/>
        </copy>
        <copy tofile="${wweb}/web.xml" filtering="true">
            <fileset file="conf/template.web.xml"/>
        </copy>
        <copy tofile="${deploy}/sql/load_options.sql" filtering="true">
            <fileset file="conf/template.load_options.sql"/>
        </copy>
        <copy tofile="${deploy}/sql/update_options_url.sql" filtering="true">
            <fileset file="conf/template.update_options_url.sql"/>
        </copy>
        <copy tofile="${deploy}/jboss/sentinel-oracle-ds.xml" filtering="true">
            <fileset file="conf/template.sentinel-oracle-ds.xml"/>
        </copy>
        <copy tofile="${deploy}/jboss/cadsr-oracle-ds.xml" filtering="true">
            <fileset file="conf/template.cadsr-oracle-ds.xml"/>
        </copy>
        <copy tofile="${deploy}/jboss/log4j.xml" filtering="true">
            <fileset file="conf/template.log4j-jboss.xml"/>
        </copy>
        <copy todir="${deploy}/bin" filtering="true">
            <fileset file="scripts/autorun.sh"/>
            <fileset file="scripts/autorun.cmd"/>
        </copy>
        <copy tofile="${deploy}/bin/cadsrsentinel.xml" filtering="true">
            <fileset file="conf/template.cadsrsentinel.xml"/>
        </copy>
        <copy tofile="${deploy}/bin/log4j.xml" filtering="true">
            <fileset file="conf/template.log4j-autorun.xml"/>
        </copy>
        <copy todir="${deploy}/bin">
            <fileset file="lib/activation.jar"/>
            <fileset file="lib/asm.jar"/>
            <fileset file="lib/cacore32-client.jar"/>
            <fileset file="lib/cglib-2.1.3.jar"/>
            <fileset file="${root}/WEB-INF/lib/commons-logging-1.1.jar"/>
            <fileset file="lib/hibernate3.jar"/>
            <fileset file="lib/log4j-1.2.13.jar"/>
            <fileset file="lib/mail.jar"/>
            <fileset file="lib/ojdbc14.jar"/>
            <fileset file="lib/spring.jar"/>
        </copy>
        <fixcrlf srcdir="${deploy}/bin"
               eol="lf"
               includes="**/*.sh, **/*.xml"
          />
        <fixcrlf srcdir="${deploy}/jboss"
               eol="lf"
               includes="**/*.sh, **/*.xml"
          />
    </target>

    <target name="cjsp" depends="assemble">
        <jspc srcdir="${root}/jsp" destdir="${oclasses}" compiler="jasper41">
            <classpath refid="libpath" />
            <include name="**/*.jsp" />
        </jspc>
        <javac srcdir="${oclasses}/jsp" destdir="${oclasses}" encoding="Cp1252">
            <classpath refid="libpath" />
            <include name="**/*.java" />
        </javac>
        <delete dir="${oclasses}/jsp"/>
        <delete dir="${oclasses}/org"/>
    </target>
    
    <target name="build-jar" depends="assemble">
        <delete file="${deploy}/bin/cadsrsentinel.jar"/>
        <delete file="${deploy}/gforge/cadsrsentinelapi.jar"/>
        <cvs command="status -v" output="${oclasses}/cvsdeploy.txt"/>
        <jar destfile="${deploy}/bin/cadsrsentinel.jar">
            <fileset dir="${oclasses}">
                <include name="cvsdeploy.txt" />
                <include name="gov/nih/nci/cadsr/sentinel/*.properties" />
                <include name="gov/nih/nci/cadsr/sentinel/tool/*.class" />
                <include name="gov/nih/nci/cadsr/sentinel/test/*.class" />
                <include name="gov/nih/nci/cadsr/sentinel/database/*.class" />
                <include name="gov/nih/nci/cadsr/sentinel/audits/*.class" />
            </fileset>
        </jar>
        <jar destfile="${deploy}/gforge/cadsrsentinelapi.jar">
            <fileset dir="${oclasses}">
                <include name="cvsdeploy.txt" />
                <include name="gov/nih/nci/cadsr/sentinel/*.properties" />
                <include name="gov/nih/nci/cadsr/sentinel/util/*.class" />
            </fileset>
        </jar>
        <delete file="${oclasses}/cvsdeploy.txt"/>
    </target>

	<target name="test" if="check.test">
        <delete><fileset dir="${test-results}" includes="**/*"/></delete>
        <junit printsummary="on" haltonfailure="yes" showoutput="yes" filtertrace="off">
            <classpath refid="libpath" />
            <classpath>
                <pathelement location="${root}"/>
                <pathelement location="${oclasses}"/>
            </classpath>
            <sysproperty key="test_propfile" value="${oprop}/test/DSRAlertTest.properties"/>
            <sysproperty key="property_xml" value="${deploy}/bin/cadsrsentinel.xml"/>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${test-results}" filtertrace="off">
                <fileset dir="${java}">
                    <include name="**/test/TestDatabase.java"/>
                </fileset>
            </batchtest>
        </junit>
    	<junit printsummary="on" haltonfailure="yes" showoutput="yes" filtertrace="off">
            <classpath refid="libpath" />
    		<classpath>
    			<pathelement location="${root}"/>
  		      	<pathelement location="${oclasses}"/>
    		</classpath>
    		<sysproperty key="test_propfile" value="${oprop}/test/DSRAlertTest.properties"/>
            <sysproperty key="property_xml" value="${deploy}/bin/cadsrsentinel.xml"/>
    	  	<formatter type="plain"/>
    	  	<batchtest fork="yes" todir="${test-results}" filtertrace="off">
    	    	<fileset dir="${java}">
    	      		<include name="**/test/Test*.java"/>
    	    	</fileset>
    	  	</batchtest>
    	</junit>
	</target>

    <target name="build-war" depends="cjsp">
        <delete file="${deploy}/jboss/cadsrsentinel.war"/>
        <cvs command="status -v" output="${jsp}/cvsdeploy.txt"/>
        <war destfile="${deploy}/jboss/cadsrsentinel.war" basedir="${root}" update="true" webxml="${wweb}/web.xml">
        </war>
        <delete file="${jsp}/cvsdeploy.txt"/>
    </target>

    <target name="build-product" depends="build-war,build-jar,test">
        <echo>Building for ${TIER.NAME}</echo>
    </target>

    <target name="package-download" depends="clean">
        <delete dir="${ospackage}"/>
        <mkdir dir="${ospackage}"/>
        <copy todir="${ospackage}">
            <fileset file="build.xml"/>
        </copy>
        <mkdir dir="${ospackage}/conf"/>
        <mkdir dir="${ospackage}/conf"/>
        <copy todir="${ospackage}/conf">
            <fileset dir="conf"/>
        </copy>
        <mkdir dir="${ospackage}/doc"/>
        <copy todir="${ospackage}/doc">
            <fileset dir="doc"/>
        </copy>
        <mkdir dir="${ospackage}/lib"/>
        <copy todir="${ospackage}/lib">
            <fileset dir="lib"/>
        </copy>
        <mkdir dir="${ospackage}/scripts"/>
        <copy todir="${ospackage}/scripts">
            <fileset dir="scripts"/>
        </copy>
        <mkdir dir="${ospackage}/src"/>
        <copy todir="${ospackage}/src">
            <fileset dir="src"/>
        </copy>
        <mkdir dir="${ospackage}/WebRoot"/>
        <copy todir="${ospackage}/WebRoot">
            <fileset dir="WebRoot">
                <exclude name="**/classes/**"/>
                <exclude name="**/web.xml"/>
            </fileset>
        </copy>
        <zip destfile="${deploy}/gforge/sentinel_ospack.zip">
            <zipfileset dir="${ospackage}"/>
        </zip>
        <delete dir="${ospackage}"/>
    </target>

    <target name="javadoc">
        <mkdir dir="${temp}"/>
        <delete dir="${odoc}"/>
        <mkdir dir="${odoc}"/>
        <mkdir dir="${deploy}"/>
        <mkdir dir="${deploy}/gforge"/>
        <javadoc
                destdir="${odoc}"
                Private="false"
                author="true"
                version="true"
                use="true"
                windowtitle="caDSR Sentinel Tool API">
			
            <classpath refid="libpath" />
			
            <packageset dir="${java}" defaultexcludes="yes">
                <include name="gov/nih/nci/cadsr/sentinel/**" />
            </packageset>
			
            <doctitle><![CDATA[<h1>caDSR Sentinel Tool</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2005 ScenPro, Inc. All Rights Reserved.</i>]]></bottom>
			<tag name="todo" scope="all" description="To do:" />
			<group title="Source Package" packages="gov.nih.nci.cadsr.sentinel.tool;gov.nih.nci.cadsr.sentinel.tool.Test;gov.nih.nci.cadsr.sentinel.tool.audits;gov.nih.nci.cadsr.sentinel.tool.database;gov.nih.nci.cadsr.sentinel.tool.ui;gov.nih.nci.cadsr.sentinel.tool.util"/>
			<link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="${temp}"/>
        </javadoc>
        <zip destfile="${deploy}/gforge/sentinel_doc.zip">
            <zipfileset dir="${odoc}"/>
        </zip>
        <delete dir="${odoc}"/>
    </target>

    <available property="deploy.gforge" file="gforge/cadsrsentinelapi.jar" />

    <target name="deploy-check" unless="JBOSS.CONF.DIR">
        <fail>One or more required [deploy] target properties are not defined. See the template.build.properties for a complete list and description.</fail>
    </target>
    
    <target name="deploy-auto" depends="deploy-check">
        <copy todir="${TOOL.BIN.DIR}">
            <fileset dir="bin" />
        </copy>
        <copy todir="${JBOSS.DEPLOY.DIR}">
            <fileset dir="jboss">
                <include name="**/*-oracle-ds.xml"/>
            </fileset>
        </copy>
        <copy tofile="${JBOSS.DEPLOY.DIR}/cadsrsentinel.waz">
            <fileset file="jboss/cadsrsentinel.war"/>
        </copy>
        <move file="${JBOSS.DEPLOY.DIR}/cadsrsentinel.waz" tofile="${JBOSS.DEPLOY.DIR}/cadsrsentinel.war"/>
    </target>
    
    <target name="deploy-gforge" if="deploy.gforge">
        <echo>

Artifacts exist in the ${basedir}${file.separator}gforge${file.separator} directory and should be published.
Although this is not required for the software deployment please place these files in a location accessible by the development team.

        </echo>
    </target>
        
    <target name="deploy" depends="deploy-auto,deploy-gforge">
        <echo>

To complete the deployment, perform the following manual steps.

1. Merge ${basedir}${file.separator}jboss${file.separator}log4j.xml into ${JBOSS.CONF.DIR}${file.separator}log4j.xml

2. Execute the ${basedir}${file.separator}sql${file.separator}load_options.sql in SQL Plus or equivalent tool, using the user "${CADSR.DS.USER}" and password "${CADSR.DS.PSWD}"

3. Execute the ${basedir}${file.separator}sql${file.separator}update_options_url.sql ONLY if specifically instructed in the deployment request.

        </echo>
    </target>
    
    <target name="build-all" depends="build-product,javadoc,package-download">
        <echo>Building for ${TIER.NAME}</echo>
    </target>

    <target name="init">
        <fail>This build script must be run with the name of the desired target: build-all, build-product, javadoc, package-download.</fail>
    </target>

</project>
