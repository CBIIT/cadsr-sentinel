<!-- Copyright ScenPro, Inc. 2005
     $Header: /share/content/gforge/sentinel/sentinel/build.xml,v 1.58 2007-08-08 16:05:09 cvsuser Exp $
     $Name: not supported by cvs2svn $
-->
<project name="caDSR Sentinel Alert Tool" default="init" basedir=".">
    <description>
        Build and deploy the caDSR Sentinel Alert Tool
    </description>
    <!-- set global properties for this build -->

	<property name="PROP.FILE" location="build.properties"/>
    <property file="${PROP.FILE}" />

    <echo>
        PROP.FILE = ${PROP.FILE}
        JDEBUG=${JDEBUG}
        CADSR.DS.URL=${CADSR.DS.URL}
        CADSR.DS.USER=${CADSR.DS.USER}
        CADSR.DS.PSWD=${CADSR.DS.PSWD}
        TIER=${TIER}
        TIER.UPPER=${TIER.UPPER}
        TIER.NAME=${TIER.NAME}
        JBOSS.HOME.DIR=${JBOSS.HOME.DIR}
        JBOSS.SERVER.DIR=${JBOSS.SERVER.DIR}
        JBOSS.CONF.DIR=${JBOSS.CONF.DIR}
        JBOSS.DEPLOY.DIR=${JBOSS.DEPLOY.DIR}
        TOOL.BIN.DIR=${TOOL.BIN.DIR}
        TEST=${TEST}
        TEST.VALID.USER=${TEST.VALID.USER}
        TEST.VALID.PSWD=${TEST.VALID.PSWD}
        TEST.BAD.USER=${TEST.BAD.USER}
        TEST.BAD.PSWD=${TEST.BAD.PSWD}
        WEBLOG.DIR=${WEBLOG.DIR}
				SCP.USER=${SCP.USER}
				SCP.HOST=${SCP.HOST}
				SCP.PATH=${SCP.PATH}
				SCP.KEYFILE=${SCP.KEYFILE}
    </echo>

    <condition property="check.props">
            <and>
                <isset property="JDEBUG"/>
                <isset property="CADSR.DS.URL"/>
                <isset property="CADSR.DS.USER"/>
                <isset property="CADSR.DS.PSWD"/>
                <isset property="TIER"/>
                <isset property="TIER.UPPER"/>
                <isset property="TIER.NAME"/>
                <isset property="JBOSS.HOME.DIR"/>
                <isset property="JBOSS.SERVER.DIR"/>
                <isset property="JBOSS.CONF.DIR"/>
                <isset property="JBOSS.DEPLOY.DIR"/>
                <isset property="TOOL.BIN.DIR"/>
                <isset property="TEST"/>
                <isset property="TEST.VALID.USER"/>
                <isset property="TEST.VALID.PSWD"/>
                <isset property="TEST.BAD.USER"/>
                <isset property="TEST.BAD.PSWD"/>
                <isset property="WEBLOG.DIR"/>
            </and>
    </condition>

    <property name="root.dir" location="${basedir}/WebRoot"/>
    <property name="artifacts.dir" location="${basedir}/deployment-artifacts"/>
    <property name="doc.dir" location="${artifacts.dir}/javadoc"/>
    <property name="temp.dir" location="${basedir}/tmp"/>
    <property name="tr.dir" location="${artifacts.dir}/test-results"/>

    <property name="odi.dir" location="${artifacts.dir}/ospack"/>
    <property name="web.dir" location="${root.dir}/WEB-INF"/>
    <property name="classes.dir" location="${web.dir}/classes"/>
    <property name="wlib.dir" location="${web.dir}/lib"/>
    <property name="jsp.dir" location="${root.dir}/jsp"/>
    <property name="prop.dir" location="${classes.dir}/gov/nih/nci/cadsr/sentinel"/>
    <property name="src.dir" location="${basedir}/src"/>
    <property name="lib.dir" location="${basedir}/lib"/>

    <condition property="check.test">
        <equals arg1="${TEST}" arg2="true" trim="true" />
    </condition>

    <filter token="CADSR.DS.URL" value="${CADSR.DS.URL}"/>
    <filter token="CADSR.DS.USER" value="${CADSR.DS.USER}"/>
    <filter token="CADSR.DS.PSWD" value="${CADSR.DS.PSWD}"/>
    <filter token="TEST.VALID.USER" value="${TEST.VALID.USER}"/>
    <filter token="TEST.VALID.PSWD" value="${TEST.VALID.PSWD}"/>
    <filter token="TEST.BAD.USER" value="${TEST.BAD.USER}"/>
    <filter token="TEST.BAD.PSWD" value="${TEST.BAD.PSWD}"/>
    <filter token="TIER" value="${TIER}"/>
    <filter token="TIER.UPPER" value="${TIER.UPPER}"/>
    <filter token="TIER.NAME" value="${TIER.NAME}"/>
    <filter token="WEBLOG.DIR" value="${WEBLOG.DIR}"/>

    <path id="libpath">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${wlib.dir}">
                <include name="**/*.jar"/>
            </fileset>
    </path>

    <target name="clean" depends="-prop-check" description="Deletes all project build artifacts and temporary files.">
        <delete dir="${classes.dir}"/>
        <delete dir="${artifacts.dir}"/>
        <delete file="${web.dir}/web.xml" />
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${artifacts.dir}"/>
        <mkdir dir="${artifacts.dir}/bin"/>
        <mkdir dir="${artifacts.dir}/gforge"/>
        <mkdir dir="${artifacts.dir}/jboss"/>
        <mkdir dir="${artifacts.dir}/sql"/>
    	<mkdir dir="${tr.dir}"/>
    </target>

    <target name="-compile" depends="clean,-prop-check" description="Compiles the project source.">
        <echo>Debug is ${JDEBUG}</echo>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" tempdir="${temp.dir}" debug="${JDEBUG}">
            <compilerarg line="-deprecation"/>
            <compilerarg line="-Xlint:unchecked"/>
            <classpath refid="libpath" />
        </javac>
    </target>

    <target name="-assemble" depends="-compile,-prop-check" description="Assembles the deployment parts into the artifacts folders.">
        <delete>
            <fileset file="${prop.dir}/DSRAlert.properties"/>
            <fileset file="${prop.dir}/test/DSRAlertTest.properties"/>
            <fileset file="${web.dir}/web.xml"/>
        </delete>
        <copy todir="${artifacts.dir}">
            <fileset file="build.xml"/>
            <fileset file="${PROP.FILE}"/>
        </copy>
        <copy tofile="${prop.dir}/DSRAlert.properties" filtering="true">
            <fileset file="conf/template.DSRAlert.properties"/>
        </copy>
        <copy tofile="${prop.dir}/test/DSRAlertTest.properties" filtering="true">
            <fileset file="conf/template.DSRAlertTest.properties"/>
        </copy>
        <copy tofile="${web.dir}/web.xml" filtering="true">
            <fileset file="conf/template.web.xml"/>
        </copy>
        <copy tofile="${artifacts.dir}/sql/load_options.sql" filtering="true">
            <fileset file="conf/template.load_options.sql"/>
        </copy>
        <copy tofile="${artifacts.dir}/sql/update_options_url.sql" filtering="true">
            <fileset file="conf/template.update_options_url.sql"/>
        </copy>
        <copy tofile="${artifacts.dir}/jboss/sentinel-oracle-ds.xml" filtering="true">
            <fileset file="conf/template.sentinel-oracle-ds.xml"/>
        </copy>
        <copy tofile="${artifacts.dir}/jboss/cadsr-oracle-ds.xml" filtering="true">
            <fileset file="conf/template.cadsr-oracle-ds.xml"/>
        </copy>
        <copy tofile="${artifacts.dir}/jboss/log4j.xml" filtering="true">
            <fileset file="conf/template.log4j-jboss.xml"/>
        </copy>
        <copy todir="${artifacts.dir}/bin" filtering="true">
            <fileset file="scripts/autorun.sh"/>
            <fileset file="scripts/autorun.cmd"/>
        </copy>
        <copy tofile="${artifacts.dir}/bin/cadsrsentinel.xml" filtering="true">
            <fileset file="conf/template.cadsrsentinel.xml"/>
        </copy>
        <copy tofile="${artifacts.dir}/bin/log4j.xml" filtering="true">
            <fileset file="conf/template.log4j-autorun.xml"/>
        </copy>
        <copy todir="${artifacts.dir}/bin">
            <fileset file="${lib.dir}/activation.jar"/>
            <fileset file="${lib.dir}/asm.jar"/>
            <fileset file="${lib.dir}/cacore32-client.jar"/>
            <fileset file="${lib.dir}/cglib-2.1.3.jar"/>
            <fileset file="${wlib.dir}/commons-logging-1.1.jar"/>
            <fileset file="${lib.dir}/hibernate3.jar"/>
            <fileset file="${lib.dir}/log4j-1.2.13.jar"/>
            <fileset file="${lib.dir}/mail.jar"/>
            <fileset file="${lib.dir}/ojdbc14.jar"/>
            <fileset file="${lib.dir}/spring.jar"/>
        </copy>
        <fixcrlf srcdir="${artifacts.dir}"
               eol="lf"
               includes="**/*.sh, **/*.xml, **/*.properties"
          />
    </target>

    <target name="-cjsp" depends="-assemble,-prop-check" description="Compiles the project JSP files to verify syntax.">
        <jspc srcdir="${root.dir}/jsp" destdir="${classes.dir}" compiler="jasper41">
            <classpath refid="libpath" />
            <include name="**/*.jsp" />
        </jspc>
        <javac srcdir="${classes.dir}/jsp" destdir="${classes.dir}" encoding="Cp1252">
            <classpath refid="libpath" />
            <include name="**/*.java" />
        </javac>
        <delete dir="${classes.dir}/jsp"/>
        <delete dir="${classes.dir}/org"/>
    </target>

    <target name="-build-jar" depends="-assemble,-prop-check" description="Build the project JAR files.">
        <delete file="${artifacts.dir}/bin/cadsrsentinel.jar"/>
        <delete file="${artifacts.dir}/gforge/cadsrsentinelapi.jar"/>
        <cvs command="status -v" output="${classes.dir}/cvsdeploy.txt"/>
        <jar destfile="${artifacts.dir}/bin/cadsrsentinel.jar">
            <fileset dir="${classes.dir}">
                <include name="cvsdeploy.txt" />
                <include name="gov/nih/nci/cadsr/sentinel/*.properties" />
                <include name="gov/nih/nci/cadsr/sentinel/tool/*.class" />
                <include name="gov/nih/nci/cadsr/sentinel/test/*.class" />
                <include name="gov/nih/nci/cadsr/sentinel/database/*.class" />
                <include name="gov/nih/nci/cadsr/sentinel/audits/*.class" />
            </fileset>
        </jar>
        <jar destfile="${artifacts.dir}/gforge/cadsrsentinelapi.jar">
            <fileset dir="${classes.dir}">
                <include name="cvsdeploy.txt" />
                <include name="gov/nih/nci/cadsr/sentinel/*.properties" />
                <include name="gov/nih/nci/cadsr/sentinel/util/*.class" />
            </fileset>
        </jar>
        <delete file="${classes.dir}/cvsdeploy.txt"/>
    </target>

	<target name="test" if="check.test" depends="-prop-check" description="Execute auto tests on the project logic.">
        <delete><fileset dir="${tr.dir}" includes="**/*"/></delete>
        <junit printsummary="on" haltonfailure="yes" showoutput="yes" filtertrace="off">
            <classpath refid="libpath" />
            <classpath>
                <pathelement location="${root.dir}"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
            <sysproperty key="test_propfile" value="${prop.dir}/test/DSRAlertTest.properties"/>
            <sysproperty key="property_xml" value="${artifacts.dir}/bin/cadsrsentinel.xml"/>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${tr.dir}" filtertrace="off">
                <fileset dir="${src.dir}">
                    <include name="**/test/TestDatabase.java"/>
                </fileset>
            </batchtest>
        </junit>
    	<junit printsummary="on" haltonfailure="yes" showoutput="yes" filtertrace="off">
            <classpath refid="libpath" />
    		<classpath>
    			<pathelement location="${root.dir}"/>
  		      	<pathelement location="${classes.dir}"/>
    		</classpath>
    		<sysproperty key="test_propfile" value="${prop.dir}/test/DSRAlertTest.properties"/>
            <sysproperty key="property_xml" value="${artifacts.dir}/bin/cadsrsentinel.xml"/>
    	  	<formatter type="plain"/>
    	  	<batchtest fork="yes" todir="${tr.dir}" filtertrace="off">
    	    	<fileset dir="${src.dir}">
    	      		<include name="**/test/Test*.java"/>
    	    	</fileset>
    	  	</batchtest>
    	</junit>
	</target>

    <target name="-build-war" depends="-cjsp,-prop-check" description="Builds the project WAR file.">
        <delete file="${artifacts.dir}/jboss/cadsrsentinel.war"/>
        <cvs command="status -v" output="${jsp.dir}/cvsdeploy.txt"/>
        <war destfile="${artifacts.dir}/jboss/cadsrsentinel.war" basedir="${root.dir}" update="true" webxml="${web.dir}/web.xml">
        </war>
        <delete file="${jsp.dir}/cvsdeploy.txt"/>
    </target>

    <target name="build-product" depends="-build-war,-build-jar,test,-prop-check" description="Builds all project binaries.">
        <echo>Building for ${TIER.NAME}</echo>
    </target>

    <target name="package-download" depends="clean,-prop-check" description="Packages the project for public distribution and access.">
        <delete dir="${odi.dir}"/>
        <mkdir dir="${odi.dir}"/>
        <copy todir="${odi.dir}">
            <fileset file="build.xml"/>
        </copy>
        <mkdir dir="${odi.dir}/conf"/>
        <mkdir dir="${odi.dir}/conf"/>
        <copy todir="${odi.dir}/conf">
            <fileset dir="conf"/>
        </copy>
        <mkdir dir="${odi.dir}/doc"/>
        <copy todir="${odi.dir}/doc">
            <fileset dir="doc"/>
        </copy>
        <mkdir dir="${odi.dir}/lib"/>
        <copy todir="${odi.dir}/lib">
            <fileset dir="lib"/>
        </copy>
        <mkdir dir="${odi.dir}/scripts"/>
        <copy todir="${odi.dir}/scripts">
            <fileset dir="scripts"/>
        </copy>
        <mkdir dir="${odi.dir}/src"/>
        <copy todir="${odi.dir}/src">
            <fileset dir="src"/>
        </copy>
        <mkdir dir="${odi.dir}/WebRoot"/>
        <copy todir="${odi.dir}/WebRoot">
            <fileset dir="WebRoot">
                <exclude name="**/classes/**"/>
                <exclude name="**/web.xml"/>
            </fileset>
        </copy>
        <zip destfile="${artifacts.dir}/gforge/sentinel_ospack.zip">
            <zipfileset dir="${odi.dir}"/>
        </zip>
        <delete dir="${odi.dir}"/>
    </target>

    <target name="javadoc" depends="-prop-check" description="Build the project Javadoc.">
        <mkdir dir="${temp.dir}"/>
        <delete dir="${doc.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${artifacts.dir}"/>
        <mkdir dir="${artifacts.dir}/gforge"/>
        <javadoc
                destdir="${doc.dir}"
                Private="false"
                author="true"
                version="true"
                use="true"
                windowtitle="caDSR Sentinel Tool API">

            <classpath refid="libpath" />

            <packageset dir="${src.dir}" defaultexcludes="yes">
                <include name="gov/nih/nci/cadsr/sentinel/**" />
            </packageset>

            <doctitle><![CDATA[<h1>caDSR Sentinel Tool</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2005 ScenPro, Inc. All Rights Reserved.</i>]]></bottom>
			<tag name="todo" scope="all" description="To do:" />
			<group title="Source Package" packages="gov.nih.nci.cadsr.sentinel.tool;gov.nih.nci.cadsr.sentinel.tool.Test;gov.nih.nci.cadsr.sentinel.tool.audits;gov.nih.nci.cadsr.sentinel.tool.database;gov.nih.nci.cadsr.sentinel.tool.ui;gov.nih.nci.cadsr.sentinel.tool.util"/>
			<link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="${temp.dir}"/>
        </javadoc>
        <zip destfile="${artifacts.dir}/gforge/sentinel_doc.zip">
            <zipfileset dir="${doc.dir}"/>
        </zip>
        <delete dir="${doc.dir}"/>
    </target>

    <condition property="unix.os">
        <os family="unix"/>
    </condition>

    <target name="-deploy-auto" if="unix.os" depends="-deploy-binaries" description="Sets the file permissions after the binaries are deployed.">
        <chmod file="${TOOL.BIN.DIR}/autorun.sh" perm="ugo+rx"/>
        <delete file="${TOOL.BIN.DIR}/autorun.cmd" />
    </target>

    <target name="-deploy-binaries" depends="-prop-check" description="Deploys the executable product binaries.">
		<!--
				<copy todir="${TOOL.BIN.DIR}">
            <fileset dir="bin" />
        </copy>
        <copy todir="${JBOSS.DEPLOY.DIR}">
            <fileset dir="jboss">
                <include name="**/*-oracle-ds.xml"/>
            </fileset>
        </copy>
        <copy tofile="${JBOSS.DEPLOY.DIR}/cadsrsentinel.waz">
            <fileset file="jboss/cadsrsentinel.war"/>
        </copy>
        <move file="${JBOSS.DEPLOY.DIR}/cadsrsentinel.waz" tofile="${JBOSS.DEPLOY.DIR}/cadsrsentinel.war"/>
		-->
				<scp remoteToDir="${SCP.USER}@${SCP.HOST}:${SCP.PATH}" keyfile="${SCP.KEYFILE}" passphrase="" verbose="true">
						<fileset file="jboss/cadsrsentinel.war"/>
				</scp>
    </target>

    <available property="deploy.gforge" file="gforge/cadsrsentinelapi.jar" />

    <target name="-deploy-gforge" if="deploy.gforge" description="Disseminates the public project artifacts, e.g. API JAR files, Javadoc, etc.">
        <echo>

Artifacts exist in the ${basedir}${file.separator}gforge${file.separator} directory and should be published.
Although this is not required for the software deployment please place these files in a location accessible by the development team.

        </echo>
    </target>

    <target name="deploy" depends="-deploy-auto,-deploy-gforge,-prop-check" description="Deploys the project artifacts.">
        <echo>

To complete the deployment, perform the following manual steps.

1. Merge ${basedir}${file.separator}jboss${file.separator}log4j.xml into ${JBOSS.CONF.DIR}${file.separator}log4j.xml

2. Execute the ${basedir}${file.separator}sql${file.separator}load_options.sql in SQL Plus or equivalent tool, using the user "${CADSR.DS.USER}" and password "${CADSR.DS.PSWD}"

3. Execute the ${basedir}${file.separator}sql${file.separator}update_options_url.sql ONLY if specifically instructed in the deployment request.

        </echo>
    </target>

    <target name="build-all" depends="build-product,javadoc,package-download,-prop-check" description="Builds all project deliverables.">
        <echo>Building for ${TIER.NAME}</echo>
    </target>

    <target name="-prop-check" unless="check.props" description="Verifies the presence of all required properties.">
        <fail>Missing one or more properties, see template.build.properties for a complete list.</fail>
    </target>

    <target name="-init-check" if="check.props" description="Notify the user that all properties are present.">
        <echo>All properties are present.</echo>
    </target>

    <target name="init" depends="-prop-check,-init-check" description="The default target which only validates the presence of the script properties.">
        <fail>This build script must be run with the name of the desired target: build-all, build-product, clean, deploy, javadoc, package-download, test.</fail>
    </target>

</project>
